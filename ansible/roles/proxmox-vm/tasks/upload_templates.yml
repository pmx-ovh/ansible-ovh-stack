---
- name: Vérifier les templates sur le stockage Proxmox
  community.general.proxmox_kvm_info:
    api_user: "{{ proxmox_api_user }}"
    api_token_id: "{{ proxmox_api_token_id }}"
    api_token_secret: "{{ proxmox_api_token_secret }}"
    api_host: "{{ proxmox_api_host }}"
    node: "{{ proxmox_node }}"
  register: proxmox_vms_info

- name: Debug | Liste des VMs/ Templates existants
  debug:
    var: proxmox_vms_info.vms

- name: Créer répertoire temporaire pour téléchargement
  ansible.builtin.file:
    path: "/tmp/proxmox_templates"
    state: directory
    mode: '0755'

- name: Télécharger les templates manquants
  ansible.builtin.get_url:
    url: "{{ item.value.url }}"
    dest: "/tmp/proxmox_templates/{{ item.key }}.qcow2"
    mode: '0644'
  loop: "{{ templates_public | dict2items }}"
  loop_control:
    label: "{{ item.key }}"
  when: item.key not in proxmox_vms_info.vms | map(attribute='name') | list

- name: Importer le template dans Proxmox (qm importdisk)
  ansible.builtin.shell: >
    qm importdisk {{ item.value.vmid }} /tmp/proxmox_templates/{{ item.key }}.qcow2 {{ proxmox_storage }} --format qcow2
  args:
    executable: /bin/bash
  loop: "{{ templates_public | dict2items }}"
  loop_control:
    label: "{{ item.key }}"
  when: item.key not in proxmox_vms_info.vms | map(attribute='name') | list

- name: Convertir la VM en template
  community.general.proxmox_kvm:
    api_user: "{{ proxmox_api_user }}"
    api_token_id: "{{ proxmox_api_token_id }}"
    api_token_secret: "{{ proxmox_api_token_secret }}"
    api_host: "{{ proxmox_api_host }}"
    node: "{{ proxmox_node }}"
    vmid: "{{ item.value.vmid }}"
    name: "{{ item.key }}"
    state: template
  loop: "{{ templates_public | dict2items }}"
  loop_control:
    label: "{{ item.key }}"
  when: item.key not in proxmox_vms_info.vms | map(attribute='name') | list
