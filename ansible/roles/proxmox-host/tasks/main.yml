# roles/proxmox-host/tasks/main.yml
# Création des bridges et VMs via Proxmox API (compatible Ansible >=2.10)
# netif est passé en string key=value compatible avec community.general.proxmox

- name: Installer paquets essentiels pour Proxmox
  apt:
    name:
      - curl
      - vim
      - python3-pip
      - bridge-utils
      - qemu-guest-agent
    state: present
    update_cache: yes

- name: Vérifier si vmbr1 existe
  command: "brctl show vmbr1"
  register: vmbr1_check
  ignore_errors: yes

- name: Créer vmbr1 si absent
  when: vmbr1_check.rc != 0
  block:
    - name: Ajouter vmbr1 dans /etc/network/interfaces
      lineinfile:
        path: /etc/network/interfaces
        insertafter: "^auto vmbr0"
        line: |
          auto vmbr1
          iface vmbr1 inet static
              address 192.168.100.1
              netmask 255.255.255.0
              bridge_ports none
              bridge_stp off
              bridge_fd 0
    - name: Activer vmbr1
      command: "ip link set vmbr1 up"

- name: Définir les VMs à créer
  set_fact:
    vm_list:
      - name: "bastion"
        vmid: 100
        template: "debian-11-standard.qcow2"
        cores: 2
        memory: 2048
        disk: 20
        netif:
          - "net0=virtio,bridge=vmbr1"
      - name: "fw1"
        vmid: 101
        template: "opnsense-template.qcow2"
        cores: 2
        memory: 2048
        disk: 20
        netif:
          - "net0=virtio,bridge=vmbr0"
          - "net1=virtio,bridge=vmbr1"
      - name: "srv1"
        vmid: 102
        template: "debian-11-standard.qcow2"
        cores: 2
        memory: 2048
        disk: 20
        netif:
          - "net0=virtio,bridge=vmbr1"
      - name: "haproxy"
        vmid: 103
        template: "debian-11-standard.qcow2"
        cores: 2
        memory: 2048
        disk: 20
        netif:
          - "net0=virtio,bridge=vmbr1"

- name: Créer les VMs via Proxmox API si elles n'existent pas
  community.general.proxmox:
    api_user: "{{ proxmox_user }}"
    api_password: "{{ proxmox_password }}"
    api_host: "{{ proxmox_api_url }}"
    vmid: "{{ item.vmid }}"
    hostname: "{{ item.name }}"
    cores: "{{ item.cores }}"
    memory: "{{ item.memory }}"
    disk: "{{ item.disk }}"
    ostemplate: "local:{{ item.template }}"
    netif: "{{ item.netif | join(',') }}"
    state: present
  loop: "{{ vm_list }}"
  register: created_vms

- name: Afficher VMs créées
  debug:
    msg: "VM {{ item.item.name }} créée ou déjà existante"
  loop: "{{ created_vms.results }}"
