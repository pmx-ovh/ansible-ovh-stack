---
# ========================================
# Variables globales pour tous les hôtes
# ========================================

# Réseau Proxmox
# ========================================
prox_bridges:
  - name: vmbr0
    ip: "192.99.32.41/24"
    gateway: "192.99.32.254"
    ports: "enp4s0"
  - name: vmbr1
    ip: "192.168.1.254/24"
    ports: "none"
  - name: vmbr2
    ip: "10.10.1.10/24"
    ports: "none"

# ========================================
# Config Proxmox
# ========================================
proxmox_public_ip: "192.99.32.41"
proxmox_public_netmask: "255.255.255.0"
proxmox_gateway: "192.99.32.254"
proxmox_wan_interface: "enp4s0"
proxmox_lan_ip: "192.168.1.254"
proxmox_lan_netmask: "255.255.255.0"
enable_vmbr2: true
proxmox_internal_ip: "10.10.1.10"
proxmox_internal_netmask: "255.255.255.0"
lan_network: "192.168.1.0/24"
wan_public_iface: "vmbr0"

proxmox_api_host: "ns515276.ip-192-99-32.net"
proxmox_api_user: "root@pam"
proxmox_api_token_id: "pmx-ansible"
proxmox_api_token_secret: "39d387e1-9658-4782-bc33-d215160bf600"
proxmox_node: "ns515276"
proxmox_storage: "local"

pmx_storage: "local"

ssh_key_path: "{{ (lookup('env', 'SSH_KEY_PATH') | default('~/.ssh/id_rsa_wbx', true)) }}"
ssh_public_key: "{{ lookup('file', ssh_key_path + '.pub') }}"




# ========================================
# Cloud-Init defaults
# ========================================
cloudinit_user: "admin"
cloudinit_password: "admin"
bastion_key_path: "~/.ssh/id_ed25519_bastion"
bastion_pub_key_content: "{{ lookup('file','~/.ssh/id_ed25519_bastion.pub') }}"

# ========================================
# VMs à provisionner
# ========================================
proxmox_vms:
  - name: opnsense
    template: opnsense-template
    vmid: 201
    cores: 2
    memory: 2048
    storage: local
    cloudinit: false
    ostype: other
    template_vmid: 901
    net:
      net0: "virtio,bridge=vmbr1"  # WAN interne Proxmox
      net1: "virtio,bridge=vmbr2"  # LAN interne pour VMs
    tags: [firewall]

  - name: bastion
    template: debian-cloud-template
    vmid: 200
    cores: 1
    memory: 1024
    storage: local
    cloudinit: true
    template_vmid: 900
    ostype: l26
    ipconfig:
      ipconfig0: "ip=192.168.1.10/24,gw=192.168.1.1"
    net:
      net0: "virtio,bridge=vmbr1"
    tags: [bastion]

  - name: haproxy
    template: debian-cloud-template
    template_vmid: 900
    vmid: 202
    cores: 1
    memory: 1024
    storage: local
    cloudinit: true
    ostype: l26
    ipconfig:
      ipconfig0: "ip=192.168.1.20/24,gw=192.168.1.1"
    net:
      net0: "virtio,bridge=vmbr1"
    tags: [haproxy]

  - name: docker-manager
    template: debian-cloud-template
    template_vmid: 900
    vmid: 203
    cores: 2
    memory: 2048
    storage: local
    cloudinit: true
    ostype: l26
    ipconfig:
      ipconfig0: "ip=192.168.1.30/24,gw=192.168.1.1"
    net:
      net0: "virtio,bridge=vmbr1"
    tags: [docker]


# ========================================
# Ansible settings
# ========================================
ansible_user: root
ansible_ssh_private_key_file: "{{ lookup('env','SSH_KEY_PATH') }}"
ansible_ssh_common_args: "-o StrictHostKeyChecking=no"
ansible_python_interpreter: /usr/bin/python3

# ========================
# VPN / OPNsense
# ========================
opnsense_lan_ip: "192.168.1.1"
vpn_network: "10.8.0.0/24"
vpn_clients: ["home-client"]
vpn_port: "1194"
vpn_proto: "udp"
vpn_server_ip: "{{ proxmox_lan_ip }}"
vpn_client_name: "client1"
# ========================================
# Config OPNsense
# ========================================
opnsense_lan_subnet: "24"
opnsense_lan_if: "em1"
opnsense_wan_if: "em0"
opnsense_wan_ip: "{{ proxmox_public_ip }}"
opnsense_wan_gw: "{{ proxmox_lan_ip }}"
opnsense_wan_bridge: "vmbr1"
opnsense_root_password: "admin"

# ========================
# Bastion
# ========================
bastion_ip: "192.168.1.10"

# ========================
# HAProxy backend
# ========================
haproxy_backend_servers:
  - name: "services"
    ip: "192.168.1.30"
    port: 80

# ========================
# Docker / Services
# ========================
traefik_acme_email: "admin@example.com"

docker_services:
  - name: traefik
    image: traefik:v3.0
    networks: ["proxy"]
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /opt/traefik/traefik.yml:/traefik.yml
      - /opt/traefik/acme.json:/acme.json
    labels:
      - "traefik.enable=true"
    command:
      - "--providers.docker=true"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.le.acme.tlschallenge=true"
      - "--certificatesresolvers.le.acme.email={{ traefik_acme_email }}"
      - "--certificatesresolvers.le.acme.storage=/acme.json"

  - name: portainer
    image: portainer/portainer-ce:latest
    networks: ["proxy"]
    ports:
      - "9000:9000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /opt/portainer/data:/data
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.portainer.rule=Host(`portainer.example.com`)"
      - "traefik.http.services.portainer.loadbalancer.server.port=9000"

  - name: wordpress
    image: wordpress:6.4-apache
    networks: ["proxy"]
    ports:
      - "8080:80"
    environment:
      WORDPRESS_DB_HOST: db
      WORDPRESS_DB_USER: wpuser
      WORDPRESS_DB_PASSWORD: wppassword
      WORDPRESS_DB_NAME: wpdb
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.wordpress.rule=Host(`wordpress.example.com`)"
      - "traefik.http.services.wordpress.loadbalancer.server.port=80"
